// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrackMyWristAPI.Data;

namespace TrackMyWristAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220113001605_WearingBools")]
    partial class WearingBools
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrackMyWristAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TrackMyWristAPI.Models.Watch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Diameter")
                        .HasColumnType("int");

                    b.Property<int>("LiftAngle")
                        .HasColumnType("int");

                    b.Property<int>("LugToLug")
                        .HasColumnType("int");

                    b.Property<int>("LugWidth")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mechanism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Watches");
                });

            modelBuilder.Entity("TrackMyWristAPI.Models.Wearing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WatchId")
                        .HasColumnType("int");

                    b.Property<bool>("WorkDay")
                        .HasColumnType("bit");

                    b.Property<bool>("WorkFromHomeDay")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("WatchId");

                    b.ToTable("Wearings");
                });

            modelBuilder.Entity("TrackMyWristAPI.Models.Watch", b =>
                {
                    b.HasOne("TrackMyWristAPI.Models.User", "User")
                        .WithMany("Watches")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TrackMyWristAPI.Models.Wearing", b =>
                {
                    b.HasOne("TrackMyWristAPI.Models.Watch", "Watch")
                        .WithMany("Wearings")
                        .HasForeignKey("WatchId");

                    b.Navigation("Watch");
                });

            modelBuilder.Entity("TrackMyWristAPI.Models.User", b =>
                {
                    b.Navigation("Watches");
                });

            modelBuilder.Entity("TrackMyWristAPI.Models.Watch", b =>
                {
                    b.Navigation("Wearings");
                });
#pragma warning restore 612, 618
        }
    }
}
